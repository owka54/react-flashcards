{"version":3,"sources":["app/routes.js","features/topics/topicsSlice.js","features/quizzes/quizzesSlice.js","components/NewQuizForm.js","data/icons.js","components/NewTopicForm.js","features/topics/Topics.js","features/topics/Topic.js","features/cards/Card.js","features/quizzes/Quiz.js","features/quizzes/Quizzes.js","app/App.js","app/store.js","index.js"],"names":["ROUTES","newQuizRoute","quizRoute","id","quizzesRoute","newTopicRoute","topicRoute","topicsRoute","topicsSlice","createSlice","name","initialState","topics","reducers","addTopic","state","action","payload","icon","quizIds","addQuizId","quizId","topicId","push","topicsSelector","actions","quizzesSlice","quizzes","addQuiz","cardIds","console","log","quizzesSelector","NewQuizForm","useState","setName","cards","setCards","setTopicId","history","useHistory","useSelector","dispatch","useDispatch","updateCardState","index","side","value","newCards","slice","onSubmit","e","preventDefault","length","quiz","addQuizThunk","uuidv4","onChange","currentTarget","placeholder","Object","values","map","topic","card","className","front","back","onClick","filter","i","removeCard","concat","ALL_ICONS","url","NewTopicForm","setIcon","type","required","defaultValue","disabled","hidden","Topics","to","src","alt","Topic","useParams","quizzesForTopic","Card","flipped","setFlipped","Quizzes","App","activeClassName","path","TopicsRoutes","QuizRoutes","match","useRouteMatch","configureStore","reducer","topicsReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.425f1281.chunk.js","sourcesContent":["const ROUTES = {\n  newQuizRoute: () => \"/quizzes/new\",\n  quizRoute: (id) => `/quizzes/${id}`,\n  quizzesRoute: () => \"/quizzes\",\n  newTopicRoute: () => \"/topics/new\",\n  topicRoute: (id) => `/topics/${id}`,\n  topicsRoute: () => \"/topics\",\n};\n\nexport default ROUTES;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst topicsSlice = createSlice({\r\n    name: 'topics',\r\n    initialState: {\r\n        topics: {}\r\n    },\r\n    reducers: {\r\n        addTopic: (state, action) => {\r\n            const { id, name, icon } = action.payload;\r\n            state.topics[id] = {\r\n                id: id,\r\n                name: name,\r\n                icon: icon,\r\n                quizIds: []\r\n            };\r\n        },\r\n        addQuizId: (state, action) => {\r\n            const { quizId, topicId } = action.payload;\r\n            state.topics[topicId].quizIds.push(quizId);\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const topicsSelector = state => state.topics.topics;\r\n\r\nexport const { addTopic, addQuizId } = topicsSlice.actions;\r\nexport default topicsSlice.reducer;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { addQuizId } from \"../topics/topicsSlice\";\r\n\r\nconst quizzesSlice = createSlice({\r\n    name: 'quizzes',\r\n    initialState: {\r\n        quizzes: {}\r\n    },\r\n    reducers: {\r\n        addQuiz: (state, action) => {\r\n            const {quizId, name, topicId, cardIds} = action;\r\n            console.log(action.payload);\r\n            state.quizzes[quizId] = {\r\n                id: quizId,\r\n                name: name,\r\n                topicId: topicId,\r\n                cardIds: cardIds\r\n            };\r\n        }\r\n    }\r\n});\r\n\r\nexport const addQuizThunk = quiz => {\r\n    const { quizId, name, topicId, cardIds } = quiz;\r\n    console.log(quiz);\r\n    return (dispatch) => {\r\n        dispatch(quizzesSlice.actions.addQuiz(quiz));\r\n        dispatch(addQuizId( { quizId: quizId, topicId: topicId }));\r\n    }\r\n}\r\n\r\nexport const quizzesSelector = state => state.quizzes.quizzes;\r\n\r\nexport const { addQuiz } = quizzesSlice.actions; \r\nexport default quizzesSlice.reducer;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { topicsSelector } from \"../features/topics/topicsSlice\";\nimport { addQuizThunk } from \"../features/quizzes/quizzesSlice\";\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const history = useHistory();\n  const topics = useSelector(topicsSelector);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    \n    // create the new quiz here\n    dispatch(addQuizThunk( { quizId: uuidv4(), name: name, topicId: topicId, cardIds: cardIds } ));\n\n    history.push(ROUTES.quizzesRoute());\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button>Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n","export const BOOK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/book.svg\";\nexport const BALLOON_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/balloon.svg\";\nexport const BIRD_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/bird.svg\";\nexport const CALENDAR_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/calendar.svg\";\nexport const CLOVER_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/clover.svg\";\nexport const CRAYONS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/crayons.svg\";\nexport const DATA_FLOW_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/data-flow.svg\";\nexport const FENCE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/fence.svg\";\nexport const GRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/grill.svg\";\nexport const HAND_DRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hand-drill.svg\";\nexport const HAT_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hat.svg\";\nexport const INTERNET_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/internet.svg\";\nexport const LADYBUG_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/ladybug.svg\";\nexport const LEAVES_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/leaves.svg\";\nexport const MEDICINE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/medicine.svg\";\nexport const NEST_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/nest.svg\";\nexport const SHUTTLECOCK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/shuttlecock.svg\";\nexport const SPADE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/spade.svg\";\nexport const STATISTICS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/statistics.svg\";\nexport const SUN_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/sun.svg\";\nexport const TREE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/tree.svg\";\n\nexport const ALL_ICONS = [\n  {\n    url: BOOK_ICON,\n    name: \"Book\",\n  },\n  {\n    url: BALLOON_ICON,\n    name: \"Balloon\",\n  },\n  {\n    url: BIRD_ICON,\n    name: \"Bird\",\n  },\n  {\n    url: CALENDAR_ICON,\n    name: \"Calendar\",\n  },\n  {\n    url: CLOVER_ICON,\n    name: \"Clover\",\n  },\n  {\n    url: CRAYONS_ICON,\n    name: \"Crayons\",\n  },\n  {\n    url: DATA_FLOW_ICON,\n    name: \"Data\",\n  },\n  {\n    url: FENCE_ICON,\n    name: \"Fence\",\n  },\n  {\n    url: GRILL_ICON,\n    name: \"Grill\",\n  },\n  {\n    url: HAND_DRILL_ICON,\n    name: \"Hand\",\n  },\n  {\n    url: HAT_ICON,\n    name: \"Hat\",\n  },\n  {\n    url: INTERNET_ICON,\n    name: \"Internet\",\n  },\n  {\n    url: LADYBUG_ICON,\n    name: \"Ladybug\",\n  },\n  {\n    url: LEAVES_ICON,\n    name: \"Leaves\",\n  },\n  {\n    url: MEDICINE_ICON,\n    name: \"Medicine\",\n  },\n  {\n    url: NEST_ICON,\n    name: \"Nest\",\n  },\n  {\n    url: SHUTTLECOCK_ICON,\n    name: \"Shuttlecock\",\n  },\n  {\n    url: SPADE_ICON,\n    name: \"Spade\",\n  },\n  {\n    url: STATISTICS_ICON,\n    name: \"Statistics\",\n  },\n  {\n    url: SUN_ICON,\n    name: \"Sun\",\n  },\n  {\n    url: TREE_ICON,\n    name: \"Tree\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { ALL_ICONS } from \"../data/icons\";\nimport { addTopic } from \"../features/topics/topicsSlice\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function NewTopicForm() {\n  const [name, setName] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    // dispatch your add topic action here\n    dispatch(addTopic( { name: name, id: uuidv4(), icon: icon} ));\n    \n    history.push(ROUTES.topicsRoute());\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"center\">Create a new topic</h1>\n        <div className=\"form-section\">\n          <input\n            id=\"topic-name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.currentTarget.value)}\n            placeholder=\"Topic Name\"\n          />\n          <select\n            onChange={(e) => setIcon(e.currentTarget.value)}\n            required\n            defaultValue=\"default\"\n          >\n            <option value=\"default\" disabled hidden>\n              Choose an icon\n            </option>\n            {ALL_ICONS.map(({ name, url }) => (\n              <option key={url} value={url}>\n                {name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button className=\"center\">Add Topic</button>\n      </form>\n    </section>\n  );\n}\n","import NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { topicsSelector } from \"./topicsSlice\";\nimport { useSelector } from \"react-redux\";\n\nexport default function Topics() {\n  const topics = useSelector(topicsSelector); // replace this with a call to your selector to select all the topics in state\n\n  return (\n    <section className=\"center\">\n      <h1>Topics</h1>\n      <ul className=\"topics-list\">\n        {Object.values(topics).map((topic) => (\n          <li className=\"topic\" key={topic.id}>\n          <Link to={ROUTES.topicRoute(topic.id)} className=\"topic-link\">\n           <div className=\"topic-container\">\n             <img src={topic.icon} alt=\"\" />\n             <div className=\"text-content\">\n               <h2>{topic.name}</h2>\n               <p>{topic.quizIds.length} Quizzes</p>\n             </div>\n           </div>\n         </Link>\n          </li>\n        ))}\n      </ul>\n      <Link\n        to={ROUTES.newTopicRoute()}\n        className=\"button create-new-topic-button\"\n      >\n        Create New Topic\n      </Link>\n    </section>\n  );\n}\n","import NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link, useParams } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\n\nexport default function Topic() {\n  const topics = {}; // replace this with a call to your selector to select all the topics in state\n  const quizzes = {}; // replace this with a call to your selector to select all the quizzes in state\n  let { topicId } = useParams();\n  const topic = topics[topicId];\n  const quizzesForTopic = topic.quizIds.map((quizId) => quizzes[quizId]);\n\n  return (\n    <section>\n      <img src={topic.icon} alt=\"\" className=\"topic-icon\" />\n      <h1>Topic: {topic.name}</h1>\n      <ul className=\"quizzes-list\">\n        {quizzesForTopic.map((quiz) => (\n          <li className=\"quiz\" key={quiz.id}>\n            <Link to={ROUTES.quizRoute(quiz.id)}>{quiz.name}</Link>\n          </li>\n        ))}\n      </ul>\n      <Link to=\"/quizzes/new\" className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nexport default function Card({ id }) {\n  const cards = {}; // replace this with a call to your selector to get all the cards in state\n  const card = cards[id];\n  const [flipped, setFlipped] = useState(false);\n\n  return (\n    <li>\n      <button className=\"card\" onClick={(e) => setFlipped(!flipped)}>\n        {flipped ? card.back : card.front}\n      </button>\n    </li>\n  );\n}\n","import { Link, useParams } from \"react-router-dom\";\nimport Card from \"../cards/Card\";\nimport ROUTES from \"../../app/routes\";\nimport { useSelector } from \"react-redux\";\nimport { quizzesSelector } from \"./quizzesSlice\";\n\nexport default function Topic() {\n  const quizzes = useSelector(quizzesSelector); // replace this with a call to your selector to get all the quizzes in state\n  let { quizId } = useParams();\n  const quiz = quizzes[quizId];\n\n  return (\n    <section>\n      <h1>{quiz.name}</h1>\n      <ul className=\"cards-list\">\n        {quiz.cardIds.map((id) => (\n          <Card key={id} id={id} />\n        ))}\n      </ul>\n      <Link to={ROUTES.newQuizRoute()} className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { useSelector } from \"react-redux\";\nimport { quizzesSelector } from \"./quizzesSlice\";\n\nexport default function Quizzes() {\n  const quizzes = useSelector(quizzesSelector); // replace this with a call to your selector to get all the quizzes in state\n  return (\n    <section className=\"center\">\n      <h1>Quizzes</h1>\n      <ul className=\"quizzes-list\">\n        {Object.values(quizzes).map((quiz) => (\n          <Link key={quiz.id} to={ROUTES.quizRoute(quiz.id)}>\n            <li className=\"quiz\">{quiz.name}</li>\n          </Link>\n        ))}\n      </ul>\n      <Link to={ROUTES.newQuizRoute()} className=\"button\">\n        Create New Quiz\n      </Link>\n    </section>\n  );\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport NewQuizForm from \"../components/NewQuizForm\";\nimport NewTopicForm from \"../components/NewTopicForm\";\nimport Topics from \"../features/topics/Topics\";\nimport Topic from \"../features/topics/Topic\";\nimport Quiz from \"../features/quizzes/Quiz\";\nimport Quizzes from \"../features/quizzes/Quizzes\";\nimport ROUTES from \"./routes\";\n\nexport default function App() {\n  return (\n    <Router>\n      <nav>\n        <ul>\n          <li>\n            <NavLink to={ROUTES.topicsRoute()} activeClassName=\"active\">\n              Topics\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.quizzesRoute()} activeClassName=\"active\">\n              Quizzes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.newQuizRoute()} activeClassName=\"active\">\n              New Quiz\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route path=\"/topics\">\n          <TopicsRoutes />\n        </Route>\n        <Route path=\"/quizzes\">\n          <QuizRoutes />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction TopicsRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewTopicForm />\n        </Route>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Topics />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nfunction QuizRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewQuizForm />\n        </Route>\n        <Route path={`${match.path}/:quizId`}>\n          <Quiz />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Quizzes />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport topicsReducer from '../features/topics/topicsSlice';\n\n\nexport default configureStore({\n  reducer: {topics: topicsReducer},\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app/App\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}